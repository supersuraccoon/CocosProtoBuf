// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameEnum.proto

#ifndef PROTOBUF_GameEnum_2eproto__INCLUDED
#define PROTOBUF_GameEnum_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
//#error This file was generated by an older version of protoc which is
//#error incompatible with your Protocol Buffer headers.  Please
//#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace game {
namespace enumeration {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_GameEnum_2eproto();
void protobuf_AssignDesc_GameEnum_2eproto();
void protobuf_ShutdownFile_GameEnum_2eproto();


enum RoleType {
  FIGHTER = 1,
  BOWMAN = 2,
  MAGICIAN = 3
};
bool RoleType_IsValid(int value);
const RoleType RoleType_MIN = FIGHTER;
const RoleType RoleType_MAX = MAGICIAN;
const int RoleType_ARRAYSIZE = RoleType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoleType_descriptor();
inline const ::std::string& RoleType_Name(RoleType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoleType_descriptor(), value);
}
inline bool RoleType_Parse(
    const ::std::string& name, RoleType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoleType>(
    RoleType_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace enumeration
}  // namespace game

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::game::enumeration::RoleType>() {
  return ::game::enumeration::RoleType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameEnum_2eproto__INCLUDED
